version: '3.8'

services:
  chatbot:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://debt_user:debt_password@postgres:5432/debt_collection_db
      - REDIS_URL=redis://redis:6379/0
      - XAI_API_KEY=${XAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN:-}
      - WHATSAPP_PHONE_NUMBER_ID=${WHATSAPP_PHONE_NUMBER_ID:-}
      - WHATSAPP_VERIFY_TOKEN=debt_collection_verify_2024
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID:-}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET:-}
      - SUPABASE_URL=${SUPABASE_URL:-}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-}
      - PYTHON_ENV=production
      - LOG_LEVEL=INFO
      - SUPABASE_SUPABASE_SUPABASE_NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_NEXT_PUBLIC_SUPABASE_URL:-}
      - SUPABASE_NEXT_PUBLIC_SUPABASE_ANON_KEY_ANON_KEY_ANON_KEY=${SUPABASE_NEXT_PUBLIC_SUPABASE_ANON_KEY:-}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    labels:
      - "com.example.description=AI Debt Collection Chatbot - Pure Python"
      - "com.example.framework=FastAPI"
      - "com.example.language=Python"
      - "com.example.no-nodejs=true"
      - "com.example.no-express=true"

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=debt_user
      - POSTGRES_PASSWORD=debt_password
      - POSTGRES_DB=debt_collection_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:
